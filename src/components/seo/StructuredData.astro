---
/**
 * Structured Data Component for ClearLane Initiative
 * Generates JSON-LD markup for better search engine understanding
 */

export interface Props {
  type: 'website' | 'article' | 'dataset' | 'research' | 'organization' | 'event' | 'faq';
  data: any;
}

const { type, data } = Astro.props;

// Base organization data
const organizationData = {
  '@context': 'https://schema.org',
  '@type': 'Organization',
  name: 'ClearLane Initiative',
  alternateName: 'ClearLane',
  url: 'https://clearlane.org',
  logo: 'https://clearlane.org/images/clearlane-logo.png',
  description: 'Data-driven advocacy for better NYC bus lane enforcement and public transit improvements',
  foundingDate: '2024',
  founder: {
    '@type': 'Person',
    name: 'Abdul Basir',
    affiliation: {
      '@type': 'EducationalOrganization',
      name: 'City University of New York (CUNY)'
    }
  },
  areaServed: {
    '@type': 'City',
    name: 'New York City',
    sameAs: 'https://en.wikipedia.org/wiki/New_York_City'
  },
  knowsAbout: [
    'Public Transportation',
    'Urban Planning',
    'Data Analysis',
    'Transportation Policy',
    'Bus Lane Enforcement',
    'Traffic Violations'
  ],
  sameAs: [
    'https://twitter.com/ClearLaneNYC',
    'https://facebook.com/ClearLaneInitiative',
    'https://linkedin.com/company/clearlane-initiative'
  ],
  contactPoint: {
    '@type': 'ContactPoint',
    contactType: 'Public Relations',
    email: 'contact@clearlane.org',
    availableLanguage: ['en', 'es']
  }
};

// Generate schema based on type
const generateSchema = (type: string, data: any) => {
  const baseContext = { '@context': 'https://schema.org' };

  switch (type) {
    case 'website':
      return {
        ...baseContext,
        '@type': 'WebSite',
        name: data.name || 'ClearLane Initiative',
        alternateName: data.alternateName || 'ClearLane',
        url: data.url || 'https://clearlane.org',
        description: data.description,
        inLanguage: 'en-US',
        isAccessibleForFree: true,
        publisher: organizationData,
        potentialAction: {
          '@type': 'SearchAction',
          target: {
            '@type': 'EntryPoint',
            urlTemplate: `${data.url || 'https://clearlane.org'}/search?q={search_term_string}`
          },
          'query-input': 'required name=search_term_string'
        },
        mainEntity: {
          '@type': 'WebPage',
          '@id': data.url,
          name: data.name,
          description: data.description
        }
      };

    case 'article':
      return {
        ...baseContext,
        '@type': 'Article',
        headline: data.headline,
        description: data.description,
        image: data.image || 'https://clearlane.org/images/clearlane-og-default.jpg',
        datePublished: data.datePublished,
        dateModified: data.dateModified || data.datePublished,
        author: {
          '@type': 'Person',
          name: data.author || 'ClearLane Initiative Team'
        },
        publisher: organizationData,
        mainEntityOfPage: {
          '@type': 'WebPage',
          '@id': data.url
        },
        articleSection: data.section || 'Research',
        keywords: data.keywords?.join(', '),
        wordCount: data.wordCount,
        about: [
          {
            '@type': 'Thing',
            name: 'Public Transportation'
          },
          {
            '@type': 'Thing',
            name: 'NYC Bus Lanes'
          }
        ]
      };

    case 'dataset':
      return {
        ...baseContext,
        '@type': 'Dataset',
        name: data.name,
        description: data.description,
        url: data.url,
        identifier: data.identifier,
        keywords: data.keywords?.join(', '),
        creator: organizationData,
        datePublished: data.datePublished,
        dateModified: data.dateModified,
        license: data.license || 'https://creativecommons.org/licenses/by/4.0/',
        distribution: [
          {
            '@type': 'DataDownload',
            encodingFormat: 'CSV',
            contentUrl: data.csvUrl
          },
          {
            '@type': 'DataDownload',
            encodingFormat: 'JSON',
            contentUrl: data.jsonUrl
          }
        ],
        temporalCoverage: data.temporalCoverage,
        spatialCoverage: {
          '@type': 'Place',
          name: 'New York City',
          geo: {
            '@type': 'GeoCoordinates',
            latitude: 40.7128,
            longitude: -74.0060
          }
        },
        variableMeasured: data.variables,
        includedInDataCatalog: {
          '@type': 'DataCatalog',
          name: 'ClearLane Research Data'
        }
      };

    case 'research':
      return {
        ...baseContext,
        '@type': 'ScholarlyArticle',
        headline: data.title,
        abstract: data.abstract,
        author: {
          '@type': 'Person',
          name: data.author,
          affiliation: {
            '@type': 'EducationalOrganization',
            name: 'City University of New York (CUNY)'
          }
        },
        datePublished: data.datePublished,
        publisher: organizationData,
        about: data.subjects?.map((subject: string) => ({
          '@type': 'Thing',
          name: subject
        })),
        methodology: data.methodology,
        funding: data.funding && {
          '@type': 'Grant',
          name: data.funding.name,
          funder: {
            '@type': 'Organization',
            name: data.funding.funder
          }
        },
        citation: data.citations?.map((citation: any) => ({
          '@type': 'CreativeWork',
          name: citation.title,
          author: citation.author
        }))
      };

    case 'event':
      return {
        ...baseContext,
        '@type': 'Event',
        name: data.name,
        description: data.description,
        startDate: data.startDate,
        endDate: data.endDate,
        eventStatus: 'https://schema.org/EventScheduled',
        eventAttendanceMode: data.attendanceMode || 'https://schema.org/OnlineEventAttendanceMode',
        location: data.location ? {
          '@type': 'Place',
          name: data.location.name,
          address: data.location.address
        } : {
          '@type': 'VirtualLocation',
          url: data.virtualUrl
        },
        organizer: organizationData,
        offers: data.offers && {
          '@type': 'Offer',
          url: data.offers.url,
          price: data.offers.price || '0',
          priceCurrency: 'USD',
          availability: 'https://schema.org/InStock'
        },
        image: data.image,
        performer: data.performers?.map((performer: any) => ({
          '@type': 'Person',
          name: performer.name
        }))
      };

    case 'faq':
      return {
        ...baseContext,
        '@type': 'FAQPage',
        mainEntity: data.questions?.map((item: any) => ({
          '@type': 'Question',
          name: item.question,
          acceptedAnswer: {
            '@type': 'Answer',
            text: item.answer
          }
        }))
      };

    case 'organization':
      return organizationData;

    default:
      return {
        ...baseContext,
        '@type': 'Thing',
        name: data.name,
        description: data.description,
        url: data.url
      };
  }
};

const schema = generateSchema(type, data);
---

<script type="application/ld+json" set:html={JSON.stringify(schema, null, 2)} />

<!-- Additional context-specific schemas -->
{type === 'article' && (
  <!-- Breadcrumb for articles -->
  <script type="application/ld+json" set:html={JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'BreadcrumbList',
    itemListElement: [
      {
        '@type': 'ListItem',
        position: 1,
        name: 'Home',
        item: 'https://clearlane.org'
      },
      {
        '@type': 'ListItem',
        position: 2,
        name: 'Research',
        item: 'https://clearlane.org/research'
      },
      {
        '@type': 'ListItem',
        position: 3,
        name: data.headline,
        item: data.url
      }
    ]
  }, null, 2)} />
)}

{type === 'dataset' && (
  <!-- Research project context -->
  <script type="application/ld+json" set:html={JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'ResearchProject',
    name: 'ClearLane Bus Enforcement Analysis',
    description: 'Comprehensive analysis of NYC bus lane violations and enforcement patterns',
    member: organizationData,
    funding: {
      '@type': 'Grant',
      name: 'Transportation Research Initiative',
      funder: {
        '@type': 'EducationalOrganization',
        name: 'City University of New York'
      }
    },
    result: [
      {
        '@type': 'Dataset',
        name: data.name,
        url: data.url
      }
    ]
  }, null, 2)} />
)}

<!-- Local Business context for NYC focus -->
<script type="application/ld+json" set:html={JSON.stringify({
  '@context': 'https://schema.org',
  '@type': 'LocalBusiness',
  '@id': 'https://clearlane.org/#localbusiness',
  name: 'ClearLane Initiative',
  description: 'NYC-focused transportation advocacy and research',
  areaServed: {
    '@type': 'City',
    name: 'New York City',
    containedInPlace: {
      '@type': 'State',
      name: 'New York'
    }
  },
  serviceType: 'Transportation Research and Advocacy',
  knowsAbout: [
    'NYC Bus System',
    'Public Transit Policy',
    'Transportation Data Analysis',
    'Urban Mobility'
  ]
}, null, 2)} />

<!-- WebSite with search functionality -->
{type !== 'website' && (
  <script type="application/ld+json" set:html={JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'WebSite',
    '@id': 'https://clearlane.org/#website',
    url: 'https://clearlane.org',
    name: 'ClearLane Initiative',
    potentialAction: {
      '@type': 'SearchAction',
      target: {
        '@type': 'EntryPoint',
        urlTemplate: 'https://clearlane.org/search?q={search_term_string}'
      },
      'query-input': 'required name=search_term_string'
    }
  }, null, 2)} />
)}