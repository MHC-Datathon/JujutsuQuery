---
/**
 * Base Layout for ClearLane Initiative
 * Provides consistent structure, SEO, and accessibility for all pages
 */

import '../styles/global.css';

export interface Props {
  title: string;
  description: string;
  keywords?: string;
  ogImage?: string;
  canonical?: string;
  noindex?: boolean;
  className?: string;
}

const {
  title,
  description,
  keywords = "ClearLane, MTA, bus enforcement, CUNY students, transit equity, rolling study hall",
  ogImage = "/images/og-clearLane.jpg",
  canonical,
  noindex = false,
  className = ""
} = Astro.props;

const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site).href;
const fullTitle = title.includes('ClearLane') ? title : `${title} | ClearLane Initiative`;

// Structured data for SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "ClearLane Initiative",
  "description": "Data-driven advocacy for better NYC bus enforcement to protect student commutes",
  "url": Astro.site?.href,
  "creator": {
    "@type": "Organization",
    "name": "ClearLane Initiative",
    "description": "Student-led transit advocacy using data science"
  },
  "mainEntity": {
    "@type": "AdvocacyOrganization",
    "name": "ClearLane Initiative",
    "description": description,
    "url": canonicalURL,
    "sameAs": [
      "https://github.com/clearlane-initiative"
    ]
  }
};
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <!-- Primary Meta Tags -->
  <title>{fullTitle}</title>
  <meta name="description" content={description} />
  <meta name="keywords" content={keywords} />
  {canonical && <link rel="canonical" href={canonicalURL} />}
  {noindex && <meta name="robots" content="noindex, nofollow" />}

  <!-- Open Graph Meta Tags -->
  <meta property="og:type" content="website" />
  <meta property="og:title" content={fullTitle} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={ogImage} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:site_name" content="ClearLane Initiative" />

  <!-- Twitter Card Meta Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={fullTitle} />
  <meta name="twitter:description" content={description} />
  <meta name="twitter:image" content={ogImage} />

  <!-- Favicons -->
  <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />

  <!-- Preload critical resources -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&family=DM+Sans:wght@400;500;600;700&display=swap" rel="stylesheet" />

  <!-- Theme and accessibility -->
  <meta name="theme-color" content="#2563eb" />
  <meta name="color-scheme" content="light" />

  <!-- Performance and security -->
  <meta http-equiv="X-Content-Type-Options" content="nosniff" />
  <meta name="referrer" content="strict-origin-when-cross-origin" />

  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

  <!-- Analytics placeholder -->
  <!-- Google Analytics would go here in production -->

  <!-- Global styles -->
  <style is:global>
    :root {
      /* Brand Colors - Transit & Education Theme */
      --color-primary: #2563eb;        /* MTA Blue */
      --color-primary-light: #3b82f6;
      --color-primary-dark: #1d4ed8;
      --color-secondary: #059669;       /* Education Green */
      --color-secondary-light: #10b981;
      --color-secondary-dark: #047857;
      --color-accent: #f59e0b;          /* Warning Orange */
      --color-accent-light: #fbbf24;
      --color-accent-dark: #d97706;

      /* Semantic Colors */
      --color-success: #059669;
      --color-warning: #f59e0b;
      --color-error: #dc2626;
      --color-info: #2563eb;

      /* Neutral Colors */
      --color-gray-50: #f9fafb;
      --color-gray-100: #f3f4f6;
      --color-gray-200: #e5e7eb;
      --color-gray-300: #d1d5db;
      --color-gray-400: #9ca3af;
      --color-gray-500: #6b7280;
      --color-gray-600: #4b5563;
      --color-gray-700: #374151;
      --color-gray-800: #1f2937;
      --color-gray-900: #111827;

      /* Text Colors */
      --color-text-primary: var(--color-gray-900);
      --color-text-secondary: var(--color-gray-600);
      --color-text-muted: var(--color-gray-500);
      --color-text-inverse: white;

      /* Background Colors */
      --color-background: white;
      --color-background-muted: var(--color-gray-50);
      --color-background-inverse: var(--color-gray-900);

      /* Border Colors */
      --color-border: var(--color-gray-200);
      --color-border-muted: var(--color-gray-100);

      /* Typography */
      --font-family-sans: 'Space Grotesk', 'DM Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      --font-family-display: 'Space Grotesk', 'DM Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      --font-family-mono: 'JetBrains Mono', 'Fira Code', 'Monaco', monospace;

      /* Spacing Scale */
      --spacing-xs: 0.25rem;    /* 4px */
      --spacing-sm: 0.5rem;     /* 8px */
      --spacing-md: 1rem;       /* 16px */
      --spacing-lg: 1.5rem;     /* 24px */
      --spacing-xl: 2rem;       /* 32px */
      --spacing-2xl: 3rem;      /* 48px */
      --spacing-3xl: 4rem;      /* 64px */

      /* Layout */
      --max-width-xs: 20rem;    /* 320px */
      --max-width-sm: 24rem;    /* 384px */
      --max-width-md: 28rem;    /* 448px */
      --max-width-lg: 32rem;    /* 512px */
      --max-width-xl: 36rem;    /* 576px */
      --max-width-2xl: 42rem;   /* 672px */
      --max-width-3xl: 48rem;   /* 768px */
      --max-width-4xl: 56rem;   /* 896px */
      --max-width-5xl: 64rem;   /* 1024px */
      --max-width-6xl: 72rem;   /* 1152px */
      --max-width-7xl: 80rem;   /* 1280px */
      --max-width-full: 100%;

      /* Shadows */
      --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
      --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
      --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
      --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);

      /* Border Radius */
      --radius-sm: 0.125rem;     /* 2px */
      --radius-md: 0.375rem;     /* 6px */
      --radius-lg: 0.5rem;       /* 8px */
      --radius-xl: 0.75rem;      /* 12px */
      --radius-2xl: 1rem;        /* 16px */
      --radius-full: 9999px;

      /* Animations */
      --transition-fast: 150ms ease;
      --transition-normal: 200ms ease;
      --transition-slow: 300ms ease;
    }

    /* Base Typography */
    html {
      font-family: var(--font-family-sans);
      line-height: 1.5;
      -webkit-text-size-adjust: 100%;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    body {
      margin: 0;
      background: var(--color-background);
      color: var(--color-text-primary);
      font-size: 1rem;
      line-height: 1.6;
    }

    /* Typography Scale */
    .text-xs { font-size: 0.75rem; line-height: 1rem; }
    .text-sm { font-size: 0.875rem; line-height: 1.25rem; }
    .text-base { font-size: 1rem; line-height: 1.5rem; }
    .text-lg { font-size: 1.125rem; line-height: 1.75rem; }
    .text-xl { font-size: 1.25rem; line-height: 1.75rem; }
    .text-2xl { font-size: 1.5rem; line-height: 2rem; }
    .text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
    .text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
    .text-5xl { font-size: 3rem; line-height: 1; }
    .text-6xl { font-size: 3.75rem; line-height: 1; }

    /* Accessibility improvements */
    *:focus {
      outline: 2px solid var(--color-primary);
      outline-offset: 2px;
    }

    *:focus:not(:focus-visible) {
      outline: none;
    }

    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }

    /* Skip to content link */
    .skip-to-main {
      position: absolute;
      top: -40px;
      left: 6px;
      background: var(--color-primary);
      color: white;
      padding: 8px;
      text-decoration: none;
      border-radius: var(--radius-md);
      z-index: 1000;
      transition: top var(--transition-fast);
    }

    .skip-to-main:focus {
      top: 6px;
    }

    /* Smooth scrolling for anchor links */
    html {
      scroll-behavior: smooth;
    }

    @media (prefers-reduced-motion: reduce) {
      html {
        scroll-behavior: auto;
      }

      *,
      *::before,
      *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
      }
    }

    /* Print styles */
    @media print {
      * {
        background: transparent !important;
        color: black !important;
        box-shadow: none !important;
        text-shadow: none !important;
      }

      a,
      a:visited {
        text-decoration: underline;
      }

      a[href]:after {
        content: " (" attr(href) ")";
      }

      .no-print {
        display: none !important;
      }

      .print-break-before {
        page-break-before: always;
      }

      .print-break-after {
        page-break-after: always;
      }

      .print-break-inside-avoid {
        page-break-inside: avoid;
      }
    }

    /* High contrast mode support */
    @media (prefers-contrast: high) {
      :root {
        --color-border: black;
        --color-text-secondary: black;
      }
    }

    /* Dark mode preparation (not implemented but structure ready) */
    @media (prefers-color-scheme: dark) {
      :root {
        color-scheme: dark;
        /* Dark mode colors would go here */
      }
    }

    /* Loading state */
    .loading {
      opacity: 0.6;
      pointer-events: none;
    }

    .loading * {
      cursor: wait !important;
    }

    /* Content fade-in animation */
    .fade-in {
      opacity: 0;
      transform: translateY(20px);
      animation: fadeIn 0.6s ease-out forwards;
    }

    .fade-in:nth-child(2) { animation-delay: 0.1s; }
    .fade-in:nth-child(3) { animation-delay: 0.2s; }
    .fade-in:nth-child(4) { animation-delay: 0.3s; }

    @keyframes fadeIn {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @media (prefers-reduced-motion: reduce) {
      .fade-in {
        opacity: 1;
        transform: none;
        animation: none;
      }
    }
  </style>
</head>

<body class={`antialiased ${className}`}>
  <!-- Skip to main content for accessibility -->
  <a href="#main-content" class="skip-to-main">
    Skip to main content
  </a>

  <!-- Page content -->
  <div id="app" class="min-h-screen flex flex-col">
    <slot />
  </div>

  <!-- Global scripts -->
  <script>
    // Performance monitoring
    window.addEventListener('load', () => {
      // Track page load performance
      if ('performance' in window) {
        const loadTime = performance.now();
        console.log(`Page loaded in ${loadTime.toFixed(2)}ms`);

        // Report to analytics (would be implemented in production)
        if (typeof gtag !== 'undefined') {
          gtag('event', 'page_load_time', {
            custom_parameter: Math.round(loadTime)
          });
        }
      }
    });

    // Accessibility enhancements
    document.addEventListener('DOMContentLoaded', () => {
      // Add keyboard navigation for custom elements
      const interactiveElements = document.querySelectorAll('[data-interactive]');
      interactiveElements.forEach(element => {
        element.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            element.click();
          }
        });
      });

      // Announce page changes to screen readers
      const pageTitle = document.title;
      const announcement = `Navigated to ${pageTitle}`;

      // Create or update live region
      let liveRegion = document.getElementById('page-live-region');
      if (!liveRegion) {
        liveRegion = document.createElement('div');
        liveRegion.id = 'page-live-region';
        liveRegion.setAttribute('aria-live', 'polite');
        liveRegion.setAttribute('aria-atomic', 'true');
        liveRegion.className = 'sr-only';
        document.body.appendChild(liveRegion);
      }

      setTimeout(() => {
        liveRegion.textContent = announcement;
      }, 100);
    });

    // Error handling
    window.addEventListener('error', (event) => {
      console.error('JavaScript error:', event.error);

      // Report to error tracking service (would be implemented in production)
      if (typeof gtag !== 'undefined') {
        gtag('event', 'exception', {
          description: event.error.message,
          fatal: false
        });
      }
    });

    // Service worker registration for offline functionality
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/sw.js')
          .then((registration) => {
            console.log('SW registered: ', registration);
          })
          .catch((registrationError) => {
            console.log('SW registration failed: ', registrationError);
          });
      });
    }
  </script>
</body>
</html>